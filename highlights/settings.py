"""
Django settings for highlights project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'bu7^yq=0g5p1od(njuq&82i-$s4_0shd)_#me5euopf5$o8e99'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'webapp.viewer.apps.ViewerConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'highlights.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), os.path.join(BASE_DIR, 'webapp/viewer', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'highlights.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'webapp/db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_URL = '/static/'
DATA_UPLOAD_MAX_NUMBER_FIELDS = 100_000

import os # Sicherstellen, dass os importiert ist

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'webapp/media') # Speichert Dateien im Projektordner/media/




# ... (andere Settings wie MEDIA_URL, MEDIA_ROOT bleiben) ...

# Twitch API Credentials (AUS SICHERHEITSGRÜNDEN aus Umgebungsvariablen laden!)
# Setze diese Variablen in deinem System oder in einer .env Datei (mit python-dotenv)
TWITCH_CLIENT_ID = os.environ.get('TWITCH_CLIENT_ID', 'DEINE_CLIENT_ID_HIER') # Ersetze durch deine ID oder lade aus Env.
TWITCH_CLIENT_SECRET = os.environ.get('TWITCH_CLIENT_SECRET', 'DEIN_CLIENT_SECRET_HIER') # Ersetze oder lade aus Env.

# Prüfe, ob die Keys vorhanden sind (optional, aber gut für Debugging)
if not TWITCH_CLIENT_ID or 'DEINE_CLIENT_ID' in TWITCH_CLIENT_ID:
    print("WARNUNG: TWITCH_CLIENT_ID nicht korrekt in settings.py oder Umgebungsvariablen gesetzt!")
if not TWITCH_CLIENT_SECRET or 'DEIN_CLIENT_SECRET' in TWITCH_CLIENT_SECRET:
    print("WARNUNG: TWITCH_CLIENT_SECRET nicht korrekt in settings.py oder Umgebungsvariablen gesetzt!")

# Optional: Pfad zum angepassten Recorder-Skript
TWITCH_RECORDER_SCRIPT = os.path.join(BASE_DIR, 'scripts', 'background_recorder.py') # Pfad zum neuen Skript